/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Modele.DAO;

import Modele.Personne;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author zemouri.cdi01
 */
public class PersonneDAO extends DAO<Personne>{
    public PersonneDAO(Connection connexion)
    {
        super(connexion);
    }
    
    public PersonneDAO()
    {
        super();
    }

    @Override
    public boolean create(Personne obj) {
        String createQuery = "INSERT INTO PERSONNE (nom_Personne, prenom_Personne, adresse_Personne, id_Ville, administrateur, date_Naissance, mail_Personne)  VALUES (?,?,?,?,?,?,?)";
        try {
            
            PreparedStatement pstmt = connexion.prepareStatement(createQuery,PreparedStatement.RETURN_GENERATED_KEYS);
            pstmt.setString(1, obj.getNom_Personne());
            pstmt.setString(2, obj.getPrenom_Personne());
            pstmt.setString(3, obj.getAdresse());
            pstmt.setInt(4, obj.getVille().getIdVille());
            pstmt.setBoolean(5, false);
            pstmt.setString(6, obj.getDate_Naissance());
            pstmt.setString(7, obj.getMail_Personne());
            pstmt.executeUpdate();
            ResultSet clefs = pstmt.getGeneratedKeys();
            if(clefs.next())
            {
               obj.setId_Personne((int)(long)clefs.getObject(1));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return true;
    }

    
    @Override
    public boolean delete(int id) {
       
        String deleteQuery = "DELETE FROM PERSONNE WHERE id_Personne = ? ";
        try {
            
            PreparedStatement pstmt = connexion.prepareStatement(deleteQuery);
            pstmt.setInt(1, id);
            pstmt.executeUpdate();
           
        } catch (SQLException ex) {
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return true;
    }

    
    @Override
    public boolean update(Personne obj) {
        String updateQuery = "UPDATE PERSONNE SET nom_Personne = ?, prenom_Personne = ?, date_naissance= ?, mail_Personne = ?, tel_Personne = ?, adresse_Personne = ?, administrateur =?, id_Ville= ?  WHERE id_Personne = ?";
        try {
            
            PreparedStatement pstmt = connexion.prepareStatement(updateQuery);
            pstmt.setString(1, obj.getNom_Personne());
            pstmt.setString(2, obj.getPrenom_Personne());
            pstmt.setString(3, obj.getDate_Naissance());
            pstmt.setString(4, obj.getMail_Personne());
            pstmt.setString(5, obj.getTelephone());
            pstmt.setString(6, obj.getAdresse());
            pstmt.setBoolean(7, obj.isAdministrateur());
            pstmt.setInt(8, obj.getVille().getIdVille());
            pstmt.setInt(9, obj.getId_Personne());
            pstmt.executeUpdate();
           
        } catch (SQLException ex) {
            
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        return true;
    }
    

    @Override
    public Personne find(int id) {
        
        String updateQuery = "SELECT * FROM PERSONNE WHERE id_Personne = ?";
        Personne pers = null;
        
        try {
            
            PreparedStatement pstmt = connexion.prepareStatement(updateQuery);
            pstmt.setInt(1, id);
            resultSet = pstmt.executeQuery();
            VilleDAO vdao = new VilleDAO(connexion);
            
            if(resultSet.first()){
               pers = new Personne(resultSet.getInt(1),
                       resultSet.getString(2),
                       resultSet.getString(3),
                       resultSet.getString(4),
                       resultSet.getString(5),
                       vdao.find(resultSet.getInt(9)),
                       resultSet.getBoolean(8),
                       resultSet.getString(6),
                       resultSet.getString(7));
              }
           
        } catch (SQLException ex) {
            
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
        return pers;
    }
    

    @Override
    public ArrayList<Personne> findAll() {
        ArrayList<Personne> list = new ArrayList();
        String updateQuery = "SELECT * FROM PERSONNE ";
        Personne pers;
        
        try {
            
            PreparedStatement pstmt = connexion.prepareStatement(updateQuery);
            resultSet = pstmt.executeQuery();
            VilleDAO vdao = new VilleDAO(connexion);
            
            while (resultSet.next()){
                 pers = new Personne(resultSet.getInt(1),
                       resultSet.getString(2),
                       resultSet.getString(3),
                       resultSet.getString(4),
                       resultSet.getString(5),
                       vdao.find(resultSet.getInt(9)),
                       resultSet.getBoolean(8),
                       resultSet.getString(6),
                       resultSet.getString(7));
                 
                 list.add(pers);
              }
           
        } catch (SQLException ex) {
            
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
        return list;
        
    }   
    
    public ArrayList<Personne> findAllSympathisant() {
        ArrayList<Personne> list = new ArrayList();
        String updateQuery = "SELECT * FROM SYMPATHISANT ORDER BY nom_Personne";
        Personne pers;
        
        try {
            
            PreparedStatement pstmt = connexion.prepareStatement(updateQuery);
            resultSet = pstmt.executeQuery();
            VilleDAO vdao = new VilleDAO(connexion);
            
            while (resultSet.next()){
                 pers = new Personne(resultSet.getInt(1),
                       resultSet.getString(2),
                       resultSet.getString(3),
                       resultSet.getString(4),
                       resultSet.getString(5),
                       vdao.find(resultSet.getInt(9)),
                       resultSet.getBoolean(8),
                       resultSet.getString(6),
                       resultSet.getString(7));
                 
                 list.add(pers);
              }
           
        } catch (SQLException ex) {
            
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
            
        }
                
        return list;
        
    }   
    
}
