/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Modele.DAO;


import Modele.Adherent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author martineau.cdi01
 */
public class AdherentDAO extends DAO<Adherent>{
    
    public AdherentDAO(Connection conn){
        super(conn);
    }
    
    public AdherentDAO(){
        super();
    }
    

    @Override
    public boolean create(Adherent obj) {
       
        String create="INSERT INTO ADHERENT(id_Personne, date_Adhesion, confirme) VALUES (?,?,?)";
        //String idPersonne="SELECT id_Personne WHERE nom_Personne = ?";
        try {
            
            //connexion = getConnection();
            PreparedStatement pstmt = connexion.prepareStatement(create, PreparedStatement.RETURN_GENERATED_KEYS);
            
            pstmt.setInt(1, obj.getPersonne().getId_Personne());
            pstmt.setString(2, obj.getDateAdhesion());
            pstmt.setBoolean(3, obj.isConfirme());
                        
            pstmt.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return true;
    }

    @Override
    public boolean delete(int id) {
       
        String deleteQuery = "DELETE FROM ADHERENT WHERE id_Adherent = ? ";
        try {
            
           // connexion = getConnection();
            PreparedStatement pstmt = connexion.prepareStatement(deleteQuery);
            pstmt.setInt(1, id);
            pstmt.executeUpdate();
           
        } catch (SQLException ex) {
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return true;
    }

    @Override
    public boolean update(Adherent obj) {
       
        String updateQuery = "UPDATE ADHERENT SET id_Personne = ? , "
                    + "confirme = ? ,"
                    + "date_Adhesion = ?"
                    + "WHERE id_Adherent = ?";
        try {
            
           // connexion = getConnection();
            PreparedStatement pstmt = connexion.prepareStatement(updateQuery);
            
            pstmt.setInt(1, obj.getPersonne().getId_Personne());
            pstmt.setBoolean(2, obj.isConfirme());
            pstmt.setString(3, obj.getDateAdhesion());
            pstmt.setInt(4, obj.getId());
            
            pstmt.executeUpdate();
           
        } catch (SQLException ex) {
            
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
        return true;
    }

    
    @Override
    public Adherent find(int id) {
         
        String updateQuery = "SELECT * FROM ADHERENT WHERE id_Adherent = ?";
        Adherent adherent = null;
        
        try {
            
           // connexion = getConnection();
            PreparedStatement pstmt = connexion.prepareStatement(updateQuery);
            pstmt.setInt(1, id);
            resultSet = pstmt.executeQuery();
            
            PersonneDAO pdao = new PersonneDAO(connexion);
                        
            if(resultSet.first()){
                
                
               adherent = new Adherent(resultSet.getInt(1),
                       resultSet.getString(2),
                       resultSet.getBoolean(3),
                       pdao.find(resultSet.getInt(6)),
                       resultSet.getString(7));
                       
                       }
           
        } catch (SQLException ex) {
            
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return adherent;
    }
        

    @Override
    public ArrayList<Adherent> findAll() {
        
        ArrayList<Adherent> list = new ArrayList();
        String updateQuery = "SELECT * FROM ADHERENT ORDER BY confirme ASC";
        Adherent adherent;
        
        try {
            
            PreparedStatement pstmt = connexion.prepareStatement(updateQuery);
            resultSet = pstmt.executeQuery();
            
            PersonneDAO pdao = new PersonneDAO(connexion);
              
            
            while (resultSet.next()){
                
               adherent = new Adherent(resultSet.getInt(1),
                       resultSet.getString(2),
                       resultSet.getBoolean(3),
                       pdao.find(resultSet.getInt(6)),
                       resultSet.getString(7));
                                              
                list.add(adherent);
  
            }
           
        } catch (SQLException ex) {
            
            Logger.getLogger(MediaDAO.class.getName()).log(Level.SEVERE, null, ex);
            
        }        
        
        return list;
    }
    
}
